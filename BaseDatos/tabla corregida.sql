use supermarket;

CREATE TABLE CUSTOMERS (
  ID_CUSTOMER int NOT NULL AUTO_INCREMENT,
  IDENTIFICATION varchar(15) DEFAULT NULL,
  FIRSTNAME varchar(50) DEFAULT NULL,
  LASTNAME varchar(50) DEFAULT NULL,
  ADDRESS varchar(255) DEFAULT NULL,
  PHONENUMBER varchar(20) DEFAULT NULL,
  EMAIL varchar(100) DEFAULT NULL,
  ESTADE tinyint(1) DEFAULT NULL,
  SecurityCode int DEFAULT NULL,
  PRIMARY KEY (ID_CUSTOMER)
);

CREATE TABLE EMPLOYEE_POSITIONS (
  ID_POSITION int NOT NULL AUTO_INCREMENT,
  POSITION_NAME varchar(50) NOT NULL,
  DESCRIPTION text,
  ESTADE tinyint(1) DEFAULT NULL,
  PRIMARY KEY (ID_POSITION)
);

CREATE TABLE EMPLOYEES (
  ID_EMPLOYEE int NOT NULL AUTO_INCREMENT,
  IDENTIFICATION varchar(15) DEFAULT NULL,
  FIRSTNAME varchar(50) DEFAULT NULL,
  LASTNAME varchar(50) DEFAULT NULL,
  POSITION int DEFAULT NULL,
  SALARY decimal(10,2) DEFAULT NULL,
  HIRINGDATE date DEFAULT NULL,
  ESTADE tinyint(1) DEFAULT NULL,
  PASSWORD varchar(200) DEFAULT NULL,
  EMAIL_EMPLOYEES varchar(200) DEFAULT NULL,
  SecurityCode varchar(50) DEFAULT NULL,
  CodeExpiration datetime DEFAULT NULL,
  PRIMARY KEY (ID_EMPLOYEE),
  KEY POSITION (POSITION),
  CONSTRAINT EMPLOYEES_ibfk_1 FOREIGN KEY (POSITION) REFERENCES EMPLOYEE_POSITIONS (ID_POSITION)
);

CREATE TABLE PRODUCT_CATEGORIES (
  ID_CATEGORY int NOT NULL AUTO_INCREMENT,
  CATEGORYNAME varchar(50) DEFAULT NULL,
  ESTADE tinyint(1) DEFAULT NULL,
  PRIMARY KEY (ID_CATEGORY)
);

CREATE TABLE SALES (
  ID_SALE int NOT NULL AUTO_INCREMENT,
  ID_CUSTOMER int DEFAULT NULL,
  SALEDATE date DEFAULT NULL,
  TOTALSALE decimal(10,2) DEFAULT NULL,
  ESTADE tinyint(1) DEFAULT NULL,
  SUBTOTAL decimal(10,2) DEFAULT NULL,
  IVA decimal(10,2) DEFAULT NULL,
  PRIMARY KEY (ID_SALE),
  KEY ID_CUSTOMER (ID_CUSTOMER),
  CONSTRAINT SALES_ibfk_1 FOREIGN KEY (ID_CUSTOMER) REFERENCES CUSTOMERS (ID_CUSTOMER)
);

CREATE TABLE SUPPLIERS (
  ID_SUPPLIER int NOT NULL AUTO_INCREMENT,
  COMPANYNAME varchar(100) DEFAULT NULL,
  CONTACTPERSON varchar(100) DEFAULT NULL,
  PHONENUMBER varchar(20) DEFAULT NULL,
  EMAIL varchar(100) DEFAULT NULL,
  ESTADE tinyint(1) DEFAULT NULL,
  PRIMARY KEY (ID_SUPPLIER)
);

CREATE TABLE TRANSACTIONTYPES (
  ID_TransactionType int NOT NULL AUTO_INCREMENT,
  TRANSACTIONTYPENAME varchar(50) DEFAULT NULL,
  ESTADE tinyint(1) DEFAULT '1',
  PRIMARY KEY (ID_TransactionType)
);

CREATE TABLE PRODUCTS (
  ID_PRODUCT int NOT NULL AUTO_INCREMENT,
  NAME varchar(100) NOT NULL,
  DESCRIPTION text,
  PRICE decimal(10,2) DEFAULT NULL,
  CATEGORY int DEFAULT NULL,
  SUPPLIER int DEFAULT NULL,
  ESTADE tinyint(1) DEFAULT NULL,
  IMAGE_PATH varchar(10000) DEFAULT NULL,
  PRIMARY KEY (ID_PRODUCT),
  KEY IDCATEGORY (CATEGORY),
  KEY IDSUPPLIER (SUPPLIER),
  CONSTRAINT IDCATEGORY FOREIGN KEY (CATEGORY) REFERENCES PRODUCT_CATEGORIES (ID_CATEGORY),
  CONSTRAINT IDSUPPLIER FOREIGN KEY (SUPPLIER) REFERENCES SUPPLIERS (ID_SUPPLIER)
);

CREATE TABLE SALES_DETAIL (
  ID_SALEDETAIL int NOT NULL AUTO_INCREMENT,
  ID_SALE int DEFAULT NULL,
  ID_PRODUCT int DEFAULT NULL,
  QUANTITYSOLD int DEFAULT NULL,
  UNITPRICE decimal(10,2) DEFAULT NULL,
  SUBTOTALPRODUCT decimal(10,2) DEFAULT NULL,
  ESTADE tinyint(1) DEFAULT NULL,
  PRIMARY KEY (ID_SALEDETAIL),
  KEY ID_SALE (ID_SALE),
  KEY ID_PRODUCT (ID_PRODUCT),
  CONSTRAINT SALES_DETAIL_ibfk_1 FOREIGN KEY (ID_SALE) REFERENCES SALES (ID_SALE),
  CONSTRAINT SALES_DETAIL_ibfk_2 FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCTS (ID_PRODUCT)
);

CREATE TABLE INVENTORY (
  ID_INVENTORY int NOT NULL AUTO_INCREMENT,
  ID_PRODUCT int DEFAULT NULL,
  QUANTITYINSTOCK int DEFAULT NULL,
  LASTREPLENISHMENTDATE date DEFAULT NULL,
  ESTADE tinyint(1) DEFAULT NULL,
  PRIMARY KEY (ID_INVENTORY),
  KEY ID_PRODUCT (ID_PRODUCT),
  CONSTRAINT INVENTORY_ibfk_1 FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCTS (ID_PRODUCT)
);

CREATE TABLE INVENTORY_TRANSACTIONS (
  ID_TRANSACTION int NOT NULL AUTO_INCREMENT,
  TRANSACTIONTYPE int DEFAULT NULL,
  ID_PRODUCT int DEFAULT NULL,
  QUANTITY int DEFAULT NULL,
  TRANSACTIONDATE date DEFAULT NULL,
  ESTADE tinyint(1) DEFAULT NULL,
  PRIMARY KEY (ID_TRANSACTION),
  KEY ID_PRODUCT (ID_PRODUCT),
  KEY fk_transaction_type (TRANSACTIONTYPE),
  CONSTRAINT fk_transaction_type FOREIGN KEY (TRANSACTIONTYPE) REFERENCES TRANSACTIONTYPES (ID_TransactionType),
  CONSTRAINT INVENTORY_TRANSACTIONS_ibfk_1 FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCTS (ID_PRODUCT)
);
